import React, {useState} from "react";
import {Link } from 'react-router-dom';
import '../CSS/signup.css';
import 'bootstrap/dist/css/bootstrap.min.css';
function Signup() {
    // Setting the variables to empty and are being linked with the name attribute in the <input> tag.
    const[formData, setFormData] = useState({
        fname: '', lname: '', username: '', email: '', password: '', cpassword: ''
    });
    const handleInputChange = (e) => {
        // e.target refers to the HTML element that triggered the event, in this case, it's the input element where the user is entering data. 
        const {name, value} = e.target;
        setFormData({...formData, [name]:value})
    };
    const handleShowPasswordToggle = () => {
        setFormData({...formData, showPassword: !formData.showPassword});
    };
    const handleSecondShowPasswordToggle = () => {
        setFormData({...formData, showSecondPassword: !formData.showSecondPassword});
    }
    // async is an asynchronous function and returns a promise which allows for fetching data, making api calls, and waiting for timeouts
    // (e) represents an event object which is generated by an event such as a (form submission, button click)
    const handleSubmit = async (e) => {
        e.preventDefault();
        if(formData.password !== formData.cpassword) {
            alert("Password do not match");
            return;
        }
        try { 
            // Await is used to pause the execution of the code until the 'fetch' operation is completed and a response is received from the server
            const response = await fetch('http://localhost:3306/Signup', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });
            if(response.ok) {
                console.log('Signup Successful');
            }
            else {
                console.error('Signup Failed');
            }
        } catch (error) {
            console.error('Error: ', error);
        }
    };
    return (
        <div>
            <div className="signup-container">
                <form onSubmit={handleSubmit}>
                    <div className="heading">
                        <label htmlFor='fname'>First Name:</label> 
                        <input id="fname" name="fname" onChange={handleInputChange} />                          
                        <label htmlFor='lname'>Last Name:</label>
                        <input id="lname" name="lname" onChange={handleInputChange}/> 
                        <label htmlFor='username'>Username:</label>
                        <input id="username" name="username" onChange={handleInputChange}/>
                        <label htmlFor='email'>Email Address:</label>
                        <input id="email" name="email" onChange={handleInputChange}/>
                        <label htmlFor='password'>Password:</label>
                        <input type={formData.showPassword ? "text" : "password"} id="password" name="password" value={formData.password} onChange={handleInputChange}/>
                        <label>
                            <input className="checkbox" type="checkbox" id="showpassword" name="showPassword" checked={formData.showPassword} onChange={handleShowPasswordToggle} />
                            Show Password
                        </label>
                        <label htmlFor='cpassword'>Confirm Password:</label>
                        <input type={formData.showSecondPassword ? "text" : "password"} id="cpassword" name="cpassword" value={formData.cpassword} onChange={handleInputChange}/>
                        <label>                            
                            <input className="checkbox" type="checkbox" id="showSecondPassword" name="showSecondPassword" checked={formData.showSecondPassword} onChange={handleSecondShowPasswordToggle} />
                            Show Password
                        </label>
                    </div>                
                    <button type="submit" className="btn btn-dark create-account">Create An Account</button>
                </form>
                <div className="login-section">
                    <p>Already Have An Account?</p>                
                    <Link className="btn btn-primary login-button" to="/Login">Login Here</Link>
                </div>
            </div>        
        </div>
    )
}
export default Signup;